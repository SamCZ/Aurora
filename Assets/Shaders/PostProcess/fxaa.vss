uniform FXAADesc
{
	vec4 g_Resolution;
};

out gl_PerVertex
{
	vec4 gl_Position;
};

out vec2 TexCoords;

out vec2 v_rgbNW;
out vec2 v_rgbNE;
out vec2 v_rgbSW;
out vec2 v_rgbSE;
out vec2 v_rgbM;

void texcoords(vec2 fragCoord, vec2 resolution,
out vec2 v_rgbNW, out vec2 v_rgbNE,
out vec2 v_rgbSW, out vec2 v_rgbSE,
out vec2 v_rgbM) {
	vec2 inverseVP = 1.0 / resolution.xy;
	v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;
	v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;
	v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;
	v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;
	v_rgbM = vec2(fragCoord * inverseVP);
}

void main()
{
	uint u = ~gl_VertexID & 1;
	uint v = (gl_VertexID >> 1) & 1;
	gl_Position = vec4(vec2(u,v) * 2 - 1, 0, 1);
	gl_Position.y = -gl_Position.y;

	TexCoords = vec2(u, 1.0 - float(v));

	vec2 fragCoord = TexCoords * g_Resolution.xy;
	texcoords(fragCoord, g_Resolution.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);
}